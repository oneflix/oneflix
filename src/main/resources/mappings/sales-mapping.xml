<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SalesDAO">

	<resultMap type="sales" id="salesList">
		<id property="salesId" column="sales_id" />
		<result property="rnum" column="rnum" />
		<result property="cid" column="cid" />
		<result property="tid" column="tid" />
		<result property="sid" column="sid" />
		<result property="email" column="email" />
		<result property="ticketId" column="ticket_id" />
		<result property="ticketName" column="ticket_name" />
		<result property="ticketPrice" column="ticket_price" />
		<result property="salesStatus" column="sales_status" />
		<result property="paymentDate" column="payment_date" />
		<result property="expiryDate" column="expiry_date" />
	</resultMap>

	<select id="getSalesList" parameterType="sales" resultMap="salesList">
		SELECT * 
			FROM (SELECT ROWNUM RNUM, S.*
				FROM (SELECT s.*, t.ticket_name, t.ticket_price 
					FROM sales s, ticket t
					WHERE s.ticket_id = t.ticket_id AND s.sales_status != 'ready'
					<if test="startDate != null and startDate != 0 or endDate != null and endDate != 0">
						AND	payment_date BETWEEN TO_DATE(#{startDate}||'000000', 'YYYYMMDDHH24MISS')
						AND TO_DATE(#{endDate}||'235959', 'YYYYMMDDHH24MISS')
					</if>
					<if test="searchSales != null and searchSales != ''">
						AND s.email like '%'||#{searchSales}||'%'
					</if>
					<if test="lastDate != null and lastDate != '0'">
						<choose>
							<when test="lastDate == 30">
								<![CDATA[
									AND payment_date >= TO_DATE(ADD_MONTHS(SYSDATE, -1))
								]]>
							</when>
						</choose>
					</if>
					<if test="email != null">
						AND email = #{email}
					</if>
					ORDER BY s.payment_date
			 		) S
				)
			ORDER BY RNUM DESC
	</select>

	<select id="getSales" parameterType="sales" resultType="sales">
		SELECT s.*, t.ticket_name, t.ticket_price FROM sales s, ticket t 
		WHERE s.ticket_id = t.ticket_id
		<if test="salesId != null">
			AND sales_id = #{salesId}
		</if>
		<if test="email != null">
			AND email = #{email}
		</if>
		<if test="salesStatus != null">
			AND sales_status = #{salesStatus}
		</if>
	</select>
	
	<insert id="insertSales" parameterType="sales">
		INSERT INTO sales(cid, tid, sales_id, email, ticket_id, sales_status)
		VALUES (#{cid}, #{tid}, #{salesId}, #{email}, #{ticketId}, #{salesStatus})
	</insert>
	
	<update id="updateSales" parameterType="sales">
		<selectKey resultType="int" keyProperty="ticketPeriod" order="BEFORE">
			SELECT ticket_period FROM ticket WHERE ticket_id = #{ticketId}
		</selectKey>
		UPDATE sales SET
		sales_status = #{salesStatus}
		<if test="salesStatus != 'inactive'">
			,sid = #{sid, jdbcType=VARCHAR}, payment_date = SYSDATE ,expiry_date = SYSDATE + #{ticketPeriod}
			,payment_method_type = #{paymentMethodType}, card_name = #{cardName, jdbcType=VARCHAR}
		</if>
		WHERE sales_id = #{salesId}
	</update>
	
	<delete id="deleteSales" parameterType="sales">
		DELETE FROM sales WHERE email = #{email} AND sales_status = #{salesStatus}
	</delete>

	<select id="getTotalSales" parameterType="sales" resultType="int">
		SELECT NVL(SUM(t.ticket_price),0)
		FROM sales s, ticket t
		WHERE s.ticket_id = t.ticket_id
		AND s.sales_status != 'ready'
			<if test="startDate != null and startDate != 0 and endDate != null and endDate != 0">
				AND	payment_date BETWEEN TO_DATE(#{startDate}||'000000', 'YYYYMMDDHH24MISS')
				AND TO_DATE(#{endDate}||'235959', 'YYYYMMDDHH24MISS')
			</if>
			<if test="searchSales != null and searchSales != ''">
				AND s.email like '%'||#{searchSales}||'%'
			</if>
			<if test="lastDate != null and lastDate != '0'">
				<choose>
					<when test="lastDate == 30">
						<![CDATA[
							AND payment_date >= TO_DATE(ADD_MONTHS(SYSDATE, -1))
						]]>
					</when>
				</choose>
			</if>

	</select>
	
	<!-- 총 게시글 개수 출력 -->
	<select id="getCountSales" parameterType="sales" resultType="int">
		SELECT COUNT(*) FROM sales
		WHERE 1 = 1
		<if test="email != null">
			AND email = #{email}
		</if>
	</select>
	
	<resultMap type="string" id="expiryEmailList">
		<id column="email" property="email"></id>
	</resultMap>
	
 	<select id="expiryCheck" resultMap="expiryEmailList">
		SELECT email FROM sales
		WHERE sales_status != 'expired'

			<![CDATA[
				AND expiry_date >= TRUNC(SYSDATE - 1)
			]]>
	</select>
	
	<update id="updateExpiry">
		UPDATE sales SET
		sales_status = 'expired'
		WHERE 
		<![CDATA[
			expiry_date >= TRUNC(SYSDATE - 1)
		]]>
	</update>
	
</mapper>